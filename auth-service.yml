keycloak:
  realm: Schools_Management
  domain: http://localhost:8080
  client-uuid: e737045f-f7f1-4b1e-83f3-1aa71425b9f3
  webhook-secret: Gq+zAzDljAtSWKC0gD9i8azCYAcXqUB3gsuOo4x+bDo=
  group:
    teacher-id: cb149d80-7b12-49d0-ac88-3032d0bb565b
    admin-id: 54f5c789-c9ba-426a-8a8e-67189b13304e
  events:
    enabled: true
  ssl-required: external
  adminClientId: school-management
  adminClientSecret: e1LQnjLrUPXhnbAFeufkAkpUkYhpieNu
  client-id: school-management
  urls:
    auth: ${keycloak.domain}
  use-resource-role-mappings: true
  bearer-only: true
#  Client Protocol: openid-connect
#  Access Type: confidential  # Must be confidential for client credentials
#  Service Accounts Enabled: ON
#  Authorization Enabled: OFF
#  Valid Redirect URIs: *


# Application specific configurations
app:
  student-domain: ${APP_STUDENT_DOMAIN:gmail.com}
  admin-domain: ${APP_STUDENT_DOMAIN:emsi.ma}
  teacher-domain: ${APP_STUDENT_DOMAIN:emsi.ma}
  department:
    max-filiere-chefs: 10                    # Limit fili√®re chefs per department
    max-members: 100                         # Limit members per department
    email-notifications-enabled: true       # Enable email notifications
    name-pattern: ^[A-Za-z0-9\\s]+$
flyway:
  enabled: true
  locations: classpath:db/migration
  baseline-on-migrate: true
  validate-on-migrate: true

# Logging configuration
logging:
  level:
    org.springframework.security: DEBUG
    com.schoolmanagement: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Database configuration
spring:
  datasource:
    url: jdbc:postgresql://localhost:5433/users_db
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  mail:
    host: localhost
    port: 1025
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: false
          starttls.enable: false
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  # parse the roles from JWT
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/Schools_Management/protocol/openid-connect/certs
          issuer-uri: http://localhost:8080/realms/Schools_Management
          authorities-claim-name: realm_access.roles
          authority-prefix: ROLE_
jwt:
  secret: e1LQnjLrUPXhnbAFeufkAkpUkYhpieNu

management:
  health:
    mail:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
    endpoint:
      health:
        show-details: when-authorized
    metrics:
      tags:
        service: auth-service
        feature: departments

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: false

server:
  port: 8081