# Enhanced application configuration for Document Service
spring:
  application:
    name: document-service

  datasource:
    url: jdbc:postgresql://localhost:5436/document_db
    username: root
    password: root
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        default_schema: requests
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: false
        jdbc:
          time_zone: UTC
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 200MB
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}
      resolve-lazily: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/${KEYCLOAK_REALM:Schools_Management}
          jwk-set-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/${KEYCLOAK_REALM:Schools_Management}/protocol/openid-connect/certs

  # Redis configuration for caching
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      database: 0
      lettuce:
        pool:
          max-active: 10
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
      key-prefix: "doc-service:"

# MinIO Configuration
minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:madmin}
  secret-key: ${MINIO_SECRET_KEY:password123}
  bucket: ${MINIO_BUCKET:student-requests}
  educational-resources-bucket: ${MINIO_EDU_BUCKET:educational-resources}
  auto-create-buckets: true
  connection-timeout: 10000
  read-timeout: 60000
  write-timeout: 60000
  enable-ssl: false

# ClamAV Configuration
clamav:
  host: ${CLAMAV_HOST:localhost}
  port: ${CLAMAV_PORT:3310}
  timeout: ${CLAMAV_TIMEOUT:30000}
  enabled: true

# Application-specific configuration
app:
  name: "Enhanced Document Service"
  version: "2.0.0"
  description: "Document and educational resource management with MinIO"

  # File handling
  max-file-size: 104857600 # 100MB in bytes
  max-request-size: 209715200 # 200MB in bytes
  allowed-file-types: >
    application/pdf,
    application/msword,
    application/vnd.openxmlformats-officedocument.wordprocessingml.document,
    application/vnd.ms-powerpoint,
    application/vnd.openxmlformats-officedocument.presentationml.presentation,
    application/vnd.ms-excel,
    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,
    text/plain,
    image/jpeg,
    image/png,
    image/gif,
    video/mp4,
    audio/mpeg

  upload:
    dir: ${UPLOAD_DIR:${java.io.tmpdir}/school-uploads}
    temp-cleanup-hours: 24

  environment:
    name: ${SPRING_PROFILES_ACTIVE:development}
    debug: false
    log-level: INFO

  features:
    educational-resources: true
    student-requests: true
    admin-documents: true
    virus-scanning: true
    audit-logging: true
    metrics-collection: true

# Document service specific configuration
document-service:
  educational-resources:
    enabled: true
    default-bucket: educational-resources
    presigned-url-expiry: PT1H # 1 hour
    max-file-size-mb: 100
    virus-scan-enabled: true
    auditing-enabled: true
    allowed-file-types:
      - application/pdf
      - application/msword
      - application/vnd.openxmlformats-officedocument.wordprocessingml.document
      - application/vnd.ms-powerpoint
      - application/vnd.openxmlformats-officedocument.presentationml.presentation
      - application/vnd.ms-excel
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      - text/plain
      - image/jpeg
      - image/png
      - image/gif
      - video/mp4
      - audio/mpeg

  file-handling:
    secure-filenames: true
    directory-cleanup: true
    temp-file-retention: PT24H # 24 hours
    max-concurrent-uploads: 10
    checksum-validation: true
    blocked-extensions:
      - .exe
      - .bat
      - .cmd
      - .sh
      - .scr
      - .vbs
      - .js
      - .jar

  minio:
    enable-versioning: false
    enable-encryption: true
    storage-class: STANDARD
    default-presigned-expiry: PT1H # 1 hour
    max-presigned-expiry-hours: 24
    enable-public-read: false
    cors-allowed-origins:
      - http://localhost:3000
      - http://localhost:4200
      - https://yourdomain.com

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:e1LQnjLrUPXhnbAFeufkAkpUkYhpieNu}

# Server configuration
server:
  port: ${SERVER_PORT:8087}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true
    db:
      enabled: true

# Logging configuration
logging:
  level:
    root: INFO
    com.auth.document_service: DEBUG
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    io.minio: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/document-service.log
    max-size: 10MB
    max-history: 7

# Springdoc OpenAPI configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: true

#spring:
#  datasource:
#    url: jdbc:postgresql://localhost:5436/document_db
#    username: root
#    password: root
#    hikari:
#      maximum-pool-size: 5
#      minimum-idle: 2
#  jpa:
#    properties:
#      hibernate:
#        default_schema: requests
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#    hibernate:
#      ddl-auto: update
#  servlet:
#    multipart:
#      max-file-size: 20MB
#      max-request-size: 40MB
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/${KEYCLOAK_REALM:Schools_Management}
#          jwk-set-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/${KEYCLOAK_REALM:Schools_Management}/protocol/openid-connect/certs
#          authorities-claim-name: authorities  # Match the claim name in JWT
#          authority-prefix: ""  # Remove default ROLE_ prefix
#
#  # Redis configuration
#  redis:
#    host: localhost  # Change to your Redis host
#    port: 6379       # Change to your Redis port
#
#    cache:
#      type: redis
#
#minio:
#  url: http://localhost:9000
#  access-key: ${MINIO_ACCESS_KEY:43epZTN68TY1gaOiU5s1}
#  secret-key: ${MINIO_SECRET_KEY:we0IohbSSunpPbI72Xoqj6yiceKzpOBGNjTbNII3}
#  bucket: student-requests
#
#clamav:
#  host: localhost
#  port: 3310
#  timeout: 10000
#
#app:
#  upload:
#    dir: ./Desktop/uploads
#  max-file-size: 60MB
#  max-request-size: 100MB
#
#jwt:
#  secret: e1LQnjLrUPXhnbAFeufkAkpUkYhpieNu
#
#logging:
#  level:
#    root: INFO
#    com.example: DEBUG
#    org.springframework: WARN
#    # Add debug logging for bucket4j to see connection issues
#    com.bucket4j: DEBUG
#    org.springframework.security: DEBUG
#    com.auth: TRACE
#
#bucket4j:
#  enabled: false
#  filters:
#    - cache-name: rate-limit-buckets
#      url: .*
#      strategy: first
#      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\" }"
#      rate-limits:
#        - expression: "@securityService.getUsername()"
#          bandwidths:
#            - capacity: 20
#              time: 1
#              unit: minutes
#server:
#  port: 8087